# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
  - name: gcr.io/cloud-builders/git
    args: ['clone', 'https://github.com/mortent/kpt.git']

  - name: gcr.io/cloud-builders/git
    dir: 'kpt'
    args: ['checkout', '${TAG_NAME}']

  # Build the image that contains most of the tools we need (e.g. tar,
  # jq, gzip, golang, bash, etc.) to build kpt tarball. This image
  # (kpt-builder) is re-used on most steps.
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'kpt'
    args: ['build', '-f', '/workspace/kpt/release/Dockerfile.kpt-build', '-t', 'kpt-builder', '.']

  # run e2e tests and linting
  - name: 'kpt-builder'
    args: ['git', 'config', '--global', 'user.email', 'you@example.com']
    dir: 'kpt'
    volumes:
      - name: home
        path: /root
  - name: 'kpt-builder'
    args: ['git', 'config', '--global', 'user.name', 'Your Name']
    dir: 'kpt'
    volumes:
      - name: home
        path: /root
  - name: 'kpt-builder'
    args: ['make', 'all']
    env: ['GO111MODULE=on']
    dir: 'kpt'
    volumes:
      - name: go-modules
        path: /go
      - name: home
        path: /root

  # remove any dirty files after running the build
  - name: gcr.io/cloud-builders/git
    dir: 'kpt'
    args: ['reset', '--hard']

  # Generate and package the licenses and necessary source code.
  - name: 'kpt-builder'
    dir: 'kpt'
    args: ['bash', '/workspace/scripts/create-licenses.sh']
    volumes:
      - name: go-modules
        path: /go

  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: [ '-c', 'mkdir -p ~/.config/goreleaser && gcloud secrets versions access latest --secret=github-token > ~/.config/goreleaser/github_token' ]

  - name: 'goreleaser/goreleaser'
    dir: 'kpt'
    args: ['release', '--skip-validate', '-f', 'release/tag/goreleaser.yaml']

  # build docker image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'kpt'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/kpt:${TAG_NAME}', '.' ]

  - name: 'gcr.io/cloud-builders/docker'
    dir: 'kpt'
    args: [ 'tag', 'gcr.io/$PROJECT_ID/kpt:${TAG_NAME}',  'gcr.io/$PROJECT_ID/kpt:latest' ]

  - name: 'gcr.io/cloud-builders/docker'
    dir: 'kpt'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/example-functions:${TAG_NAME}', '-f', 'functions/examples/Dockerfile', '.' ]

  - name: 'gcr.io/cloud-builders/docker'
    dir: 'kpt'
    args: [ 'tag', 'gcr.io/$PROJECT_ID/example-functions:${TAG_NAME}',  'gcr.io/$PROJECT_ID/example-functions:latest' ]

  # push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/kpt:${TAG_NAME}']

  # update latest tag on release
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/kpt:latest']

  # push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/example-functions:${TAG_NAME}']

  # update latest tag on release
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/example-functions:latest']

timeout: '60m'
